{
  "base": {
    "app_footer": {
      "homepage": "Homepage"
    },
    "app_header": {
      "navigation": {
        "home": "Home",
        "nodes": "Nodes",
        "indices": "Indices",
        "shards": "Shards",
        "search": "Search",
        "rest": "REST",
        "snapshots": "Snapshots"
      }
    },
    "language_switcher": {
      "title": "Change language",
      "languages": {
        "en": {
          "title": "English"
        },
        "cn": {
          "title": "Chinese"
        },
        "fr": {
          "title": "French"
        },
        "it": {
          "title": "Italian"
        },
        "ru": {
          "title": "Russian"
        },
        "jp": {
          "title": "Japanese"
        }
      }
    },
    "theme_switcher": {
      "title": "Change theme"
    }
  },
  "defaults": {
    "filter": {
      "label": "Filter..."
    },
    "cancel": "Cancel",
    "close": "Close",
    "create": "Create",
    "delete": "Delete",
    "success": "Success",
    "bulk": "Bulk Action",
    "copy": "Copy"
  },
  "common": {
    "yes": "Yes",
    "no": "No"
  },
  "cluster_selection": {
    "cluster_selection": {
      "connected_info": {
        "title": "Connected to '{activeInstanceName}' ({activeInstanceUri})"
      }
    },
    "cluster_table": {
      "headers": {
        "cluster": "Cluster",
        "uri": "Uri",
        "version": "Version"
      },
      "row": {
        "title": "Connect to cluster at '{uri}'",
        "remove_cluster": {
          "confirm": "Remove cluster '{name}' ({uri})?"
        },
        "unsupported": "Elasticsearch {majorVersion} is EOL and not fully supported by elasticvue. You may encounter bugs and limited functionality.",
        "predefined": "This cluster was setup by your administrator. You cannot change it directly."
      }
    },
    "edit_cluster": {
      "edit": {
        "title": "Edit cluster"
      },
      "heading": "Edit cluster"
    },
    "new_cluster": {
      "add_cluster": "Add cluster",
      "heading": "Add elasticsearch cluster"
    }
  },
  "helpers": {
    "import_export": {
      "import_backup": {
        "confirm": "Are you sure? Importing a backup will overwrite your current settings and saved clusters!"
      }
    }
  },
  "home": {
    "client_information": {
      "heading": "Cluster Information"
    },
    "cluster_health": {
      "heading": "Cluster Health"
    }
  },
  "indices": {
    "heading": "Indices",
    "index_aliases": {
      "text": "Aliases",
      "heading": "Manage aliases",
      "index": "Index: {index}",
      "form": {
        "new_alias": {
          "label": "New alias"
        },
        "add_alias": "Add new alias"
      },
      "table": {
        "headers": {
          "alias": "Alias"
        }
      },
      "delete_alias": {
        "confirm": "Delete alias '{alias}' for index '{index}'?"
      }
    },
    "index_reindex": {
      "text": "Reindex",
      "heading": "Reindex index",
      "index": "Index: {index}",
      "form": {
        "source": {
          "label": "Reindex into..."
        },
        "reindex": "Reindex"
      }
    },
    "index_row": {
      "search": {
        "title": "Search '{index}'"
      },
      "shards": {
        "title": "{pri} primary\n{rep} replica"
      },
      "options": {
        "show_info": "Show info",
        "show_stats": "Show stats",
        "forcemerge": {
          "text": "Forcemerge all indices | Forcemerge index | Forcemerge {count} indices",
          "growl": "The index '{index}' was successfully merged."
        },
        "refresh": {
          "text": "Refresh all indices | Refresh index | Refresh {count} indices",
          "growl": "The index '{index}' was successfully refreshed."
        },
        "flush": {
          "text": "Flush all indices | Flush index | Flush {count} indices",
          "growl": "The index '{index}' was successfully flushed."
        },
        "clear_cache": {
          "text": "Clear all index caches | Clear index cache | Clear {count} indices cache",
          "growl": "The index '{index}' cache was successfully cleared."
        },
        "close": {
          "text": "Close index | Close index | Close {count} indices",
          "confirm": "Close index '{index}'?",
          "growl": "The index '{index}' cache was successfully closed."
        },
        "open": {
          "text": "Open index | Open index | Open {count} indices",
          "growl": "The index '{index}' cache was successfully opened."
        },
        "clear": {
          "text": "Clear index | Clear index | Clear {count} indices",
          "confirm": "Clear index '{index}'? This will remove ALL data in your index!",
          "growl": "The index '{index}' was successfully cleared."
        },
        "delete_by_query": {
          "text": "Delete all documents",
          "confirm": "Delete all documents in index '{index}'? This will remove ALL data in your index!",
          "growl": "The documents in index '{index}' where successfully deleted."
        },
        "delete": {
          "text": "Delete index | Delete index | Delete {count} indices",
          "confirm": "Delete index '{index}'?",
          "growl": "The index '{index}' cache was successfully deleted."
        },
        "export": {
          "text": "Export index"
        }
      }
    },
    "indices_table": {
      "show_hidden_indices": {
        "label": "Show hidden indices"
      },
      "sticky_table_header": {
        "label": "Sticky table header"
      },
      "table": {
        "headers": {
          "name": "Name",
          "status": "Status",
          "health": "Health",
          "uuid": "UUID",
          "aliases": "Aliases",
          "shards": "Shards",
          "segments": "Segments",
          "docs": "Docs",
          "storage": "Storage",
          "created": "Created"
        }
      }
    },
    "export": {
      "title": "Export index '{index}'",
      "subtitle": "Export all documents and mapping from this index",
      "include_mapping": "Include mapping",
      "compress_file": "Compress file (ZIP)",
      "warning": "Large indices may take a long time to export",
      "start_export": "Start Export",
      "progress": {
        "title": "Exporting Index",
        "exporting": "Exporting '{index}'",
        "preparing": "Preparing export...",
        "exporting_documents": "Exporting documents... ({processed}/{total})",
        "creating_file": "Creating export file...",
        "downloading": "Downloading file...",
        "completed": "Export completed successfully!"
      },
      "error": {
        "export_failed": "Export failed",
        "unknown": "An unknown error occurred during export"
      }
    },
    "import": {
      "title": "Import Index",
      "subtitle": "Import documents and mapping from a dump file",
      "select_file": "Select dump file (.json or .zip)",
      "mode": {
        "new_index": "Create new index",
        "existing_index": "Import to existing index"
      },
      "new_index_name": "New index name",
      "select_existing_index": "Select existing index",
      "advanced_options": "Advanced options",
      "overwrite_existing": "Overwrite existing documents",
      "overwrite_warning": "This will replace all existing documents in the target index",
      "file_preview": "File Preview",
      "original_index": "Original index",
      "documents_count": "Documents count",
      "has_mapping": "Has mapping",
      "export_date": "Export date",
      "start_import": "Start Import",
      "validation": {
        "index_name_required": "Index name is required",
        "index_required": "Please select an index"
      },
      "progress": {
        "title": "Importing Index",
        "importing": "Importing to '{targetIndex}'",
        "preparing": "Preparing import...",
        "creating_index": "Creating index...",
        "completed": "Import completed successfully!",
        "completed_with_errors": "Import completed with {errors} errors"
      },
      "error": {
        "no_json_in_zip": "No JSON file found in ZIP archive",
        "invalid_file_format": "Invalid file format",
        "parse_failed": "Failed to parse file",
        "index_exists": "Index '{index}' already exists",
        "import_failed": "Import failed",
        "unknown": "An unknown error occurred during import"
      }
    },
    "import_index":{
      "heading": "import Index"
    },
    "new_index": {
      "heading": "New Index",
      "form": {
        "index_name": {
          "label": "Index name"
        },
        "shards": {
          "label": "Number of shards"
        },
        "replicas": {
          "label": "Number of replicas"
        }
      },
      "create_index": {
        "growl": "The index '{index}' was successfully created."
      }
    },
    "index_clear": {
      "progress": {
        "title": "Clearing index",
        "clearing": "Clearing '{index}'",
        "preparing": "Preparing...",
        "clearing_documents": "Deleting documents... ({processed}/{total})",
        "completed": "Clearing completed successfully!"
      }
    }
  },
  "index_templates": {
    "heading": "Index templates",
    "endpoint": "Endpoint",
    "index_templates_table": {
      "show_hidden_templates": {
        "label": "Show hidden templates"
      },
      "sticky_table_header": {
        "label": "Sticky table header"
      },
      "table": {
        "headers": {
          "name": "Name",
          "index_patterns": "index_patterns"
        }
      }
    }
  },
  "mixins": {
    "test_connection": {
      "cluster_reachable": "You cluster is reachable and configured correctly."
    }
  },
  "cluster_nodes": {
    "heading": "Nodes",
    "node_icons": {
      "master": {
        "title": "Master node"
      },
      "master_eligible": {
        "title": "Master eligible"
      },
      "data": {
        "title": "Data node"
      },
      "ingest": {
        "title": "Ingest node"
      },
      "coordinating_only": {
        "title": "Coordinating only node"
      }
    },
    "node_properties": {
      "ip": "ip",
      "id": "id",
      "master": "master",
      "node_role": "node.role",
      "shards": "shards",
      "attr": "attributes",
      "load": "load",
      "cpu": "cpu usage",
      "ram": "system ram",
      "heap": "jvm heap",
      "disk": "disk",
      "name": "name",
      "status": "status",
      "version": "version"
    }
  },
  "query": {
    "heading": "Rest",
    "api_documentation": "api documentation",
    "rest": {
      "history": "History",
      "form": {
        "method": {
          "label": "HTTP Method"
        },
        "path": {
          "label": "Path"
        },
        "send_request": "Send request",
        "save_request": "Save",
        "download_as_json": "Download response body",
        "paste_kibana": "Paste kibana console query"
      },
      "get_request_hint": {
        "cannot_send_body": "You cannot send a request body via {method}.<br> Please ",
        "use_post": "use POST",
        "query_parameters": "if you want to send a request body.",
        "search_post": "You can use POST to search with the _search endpoint."
      }
    },
    "rest_query_history": {
      "table": {
        "headers": {
          "query": "Query",
          "timestamp": "Timestamp"
        }
      },
      "body_preview": {
        "use": "Use in current tab",
        "open_new_tab": "Open in new tab"
      }
    },
    "rest_query_examples": {
      "heading": "Query examples",
      "table": {
        "headers": {
          "query": "Query",
          "description": "Description"
        },
        "row": {
          "use": "Use"
        }
      }
    }
  },
  "repositories": {
    "heading": "Snapshot Repositories",
    "new_repository": {
      "heading": "New repository",
      "form": {
        "name": {
          "label": "Repository name*"
        },
        "type": {
          "label": "Repository type*"
        },
        "bucket": {
          "label": "S3 bucket*"
        },
        "client": {
          "label": "S3 client"
        },
        "protocol": {
          "label": "Protocol*"
        },
        "region": {
          "label": "S3 region"
        },
        "path_style_access": {
          "label": "Path style access"
        },
        "location": {
          "label": "Repository location*"
        },
        "chunk_size": {
          "label": "Chunk size"
        },
        "max_restore_bytes_per_sec": {
          "label": "max_restore_bytes_per_sec"
        },
        "max_snapshot_bytes_per_sec": {
          "label": "max_snapshot_bytes_per_sec"
        },
        "compress": {
          "label": "Compress"
        },
        "readonly": {
          "label": "Readonly"
        }
      },
      "create_repository": {
        "growl": "The repository '{repositoryName}' was successfully created."
      }
    },
    "repositories_table": {
      "table": {
        "headers": {
          "name": "name",
          "type": "type",
          "settings": "settings"
        }
      },
      "delete_repository": {
        "confirm": "Delete repository '{name}' and all snapshots inside?",
        "growl": "The repository '{name}' was successfully deleted."
      }
    }
  },
  "search": {
    "heading": "Search",
    "form": {
      "query": {
        "label": "Search"
      },
      "search_examples": {
        "button": "Search examples",
        "hint": "Search examples, see <a tabindex='-1' target='_blank' rel='noopener' href='https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html'>query string query</a> for details"
      },
      "search": "Search",
      "customize_query": {
        "button": "Custom search",
        "reset": "Reset query"
      }
    },
    "search_result": {
      "delete": {
        "text": "# | Delete document | Delete documents",
        "confirm": "# | Are you sure you want to delete this document? | Are you sure you want to delete {count} documents?",
        "growl": "# | Document successfully deleted. | Documents successfully deleted."
      }
    },
    "results_table": {
      "settings": {
        "columns": "Columns"
      },
      "download_as_json": "Download as json",
      "add_document": "Add document"
    },
    "context_menu": {
      "copy_row_json": "Copy row as JSON",
      "copy_cell_content": "Copy cell content",
      "copy_row_id": "Copy row ID",
      "copy_selected_rows_json": "Copy {count} selected rows as JSON",
      "row_copied": "Row copied to clipboard",
      "cell_copied": "Cell content copied",
      "id_copied": "ID copied to clipboard",
      "selected_rows_copied": "{count} rows copied to clipboard",
      "edit_row_json": "Edit row as JSON",
      "add_row_json": "Add row as JSON"
    },
    "edit_document": {
      "new_document": "New document",
      "create": {
        "text": "Create",
        "growl": "Document created successfully."
      },
      "update": {
        "text": "Update",
        "growl": "Document updated successfully."
      }
    }
  },
  "settings": {
    "heading": "Settings",
    "hide_indices_regex": {
      "label": "Hide indices regex",
      "message": "Indices matching this regex will be hidden by default on all places where indices are listed",
      "reset": "Reset to default {regex}"
    },
    "hide_nodes_attributes_regex": {
      "label": "Hide node attributes regex",
      "message": "Node attributes matching this regex will be hidden by default on the nodes overview",
      "reset": "Reset to default {regex}"
    },
    "document_field_max_length": {
      "label": "Document field max length",
      "message": "Max length of document field values in search results, longer will be truncated.",
      "reset": "Reset to default {value}"
    },
    "localize_timestamp": {
      "label": "Localize value of '{'@'}timestamp' fields in search results"
    },
    "disconnect_and_reset": {
      "heading": "Disconnect and reset all settings",
      "button": "Disconnect and reset",
      "confirm": "Are you sure? This will delete all data saved by elasticvue! You will have to reconnect to your cluster."
    },
    "import_export": {
      "heading": "Import/Export elasticvue data",
      "message": "You can import & export your elasticvue config as json. This is <strong>not</strong> a backup of your clusters data, use snapshots if you need to backup your indices.",
      "export": {
        "heading": "Export",
        "included": "Whats included?",
        "download": "Download backup"
      },
      "import": {
        "heading": "Import",
        "select_file": "Chose file...",
        "import": "Import backup"
      }
    },
    "editor_vim_mode": {
      "label": "Use vim keybindings in editor"
    }
  },
  "setup": {
    "configure": {
      "heading": "1. Configure",
      "introduction": "You have to setup CORS to use elasticvue web. Add the following lines to your",
      "allow_cors": "allow CORS requests from {domain}",
      "authorization": "and if your cluster uses authorization",
      "restart": "Then restart your cluster"
    },
    "setup_instance": {
      "heading": "Add elasticsearch cluster",
      "configure": "1. Configure",
      "connect": "2. Connect"
    },
    "test_and_connect": {
      "heading": "2. Connect",
      "form": {
        "name": {
          "label": "Cluster name"
        },
        "username": {
          "label": "Username"
        },
        "password": {
          "label": "Password"
        },
        "api_key": {
          "label": "Encoded API key"
        },
        "uri": {
          "label": "Uri"
        },
        "access_key_id": {
          "label": "Access key ID"
        },
        "secret_access_key": {
          "label": "Secret access key"
        },
        "session_token": {
          "label": "Session token (optional)"
        },
        "region": {
          "label": "AWS region"
        },
        "test_connection": "Test connection",
        "connect": "Connect"
      },
      "connected": "Successfully connected."
    }
  },
  "shards": {
    "heading": "Shards",
    "health": "Health",
    "shards_table": {
      "cancel_relocation": "Cancel reroute",
      "reroute": {
        "confirm": "Reroute shard '{shard}' from node '{fromNode}' to '{toNode}'?"
      }
    }
  },
  "shard_recovery": {
    "heading": "Shard recovery"
  },
  "shard_recovery_table": {
    "stage": "Stage",
    "columns": {
      "index": "Index",
      "stage": "Stage",
      "source": "Source",
      "target": "Target",
      "time": "Time",
      "duration": "Duration",
      "files": "Files",
      "bytes": "Bytes",
      "translog_ops": "Translog Ops"
    }
  },
  "shared": {
    "cluster_connection_errors": {
      "connection_error": "Connection error",
      "cant_connect": "Can't connect to your cluster.",
      "please_check": "Please make sure that",
      "checklist": {
        "reachable": "Your cluster is reachable via",
        "ssl": "Your browser trusts the clusters ssl certificate",
        "cors": "You have enabled CORS and restarted your cluster"
      }
    },
    "index_filter": {
      "use_index_pattern": "use index pattern",
      "use_index_select": "select indices",
      "index_pattern": {
        "input": {
          "label": "Index pattern"
        },
        "matched_indices": "matches {count} indices"
      },
      "index_select": {
        "select_indices": {
          "label": "Select indices"
        },
        "indices_selected": "indices selected",
        "select_all": {
          "text": "select all"
        },
        "deselect_all": {
          "text": "deselect all"
        }
      }
    },
    "table_bottom": {
      "rows_per_page": {
        "confirm": "WARNING: Are you sure? Showing {value} entries at once might cause issues or freezes. It is recommended to use the search/filter functionality to limit the results."
      }
    },
    "table_settings": {
      "reset": "reset",
      "clear": "clear",
      "reset_order": "Reset Order",
      "clear_sorts": "Clear Sorts",
      "move_to_top": "Move to top",
      "move_up": "Move up",
      "move_down": "Move down",
      "move_to_bottom": "Move to bottom"
    },
    "authorization_header_hint": "Make sure that \"http.cors.allow-headers\" is configured",
    "code_editor": {
      "actions": {
        "beautify": {
          "title": "Beautify (Ctrl+ALT+L)",
          "text": "Beautify"
        },
        "wrap_lines": {
          "label": "Wrap lines",
          "title": "Wrap long lines"
        },
        "collapse_all": {
          "title": "Collapse"
        },
        "expand_all": {
          "title": "Expand"
        }
      }
    },
    "loader": {
      "copy_error": "Copy error",
      "network_error": "Network error, cannot access your cluster.",
      "cluster_uri": "Cluster uri:"
    },
    "reload_button": {
      "reload": "Reload"
    },
    "timer": {
      "settings": {
        "title": "Auto reload"
      }
    },
    "ssl_hint": {
      "hint": "Make sure your browser trusts the cluster's SSL certificate when using HTTPS.",
      "help": "Help"
    }
  },
  "snapshots": {
    "heading": "Repository '{name}' snapshots",
    "new_snapshot": {
      "heading": "New snapshot",
      "form": {
        "snapshot_name": {
          "label": "Snapshot name"
        }
      },
      "create_snapshot": {
        "growl": "The snapshot '{name}' was successfully created."
      }
    },
    "restore_snapshot": {
      "heading": "Restore '{name}'",
      "form": {
        "ignore_unavailable": {
          "label": "Ignore unavailable"
        },
        "include_global_state": {
          "label": "Include global state"
        },
        "rename_pattern": {
          "label": "Rename pattern"
        },
        "rename_replacement": {
          "label": "Rename replacement"
        },
        "restore": "Restore"
      },
      "restore_snapshot": {
        "growl": "The snapshot '{snapshot}' was successfully restored."
      }
    },
    "snapshot": {
      "indices": "{count} indices",
      "delete": {
        "confirm": "Delete snapshot '{snapshot}'?",
        "growl": "The snapshot '{snapshot}' was successfully deleted."
      }
    },
    "snapshots_table": {
      "table": {
        "headers": {
          "status": "status",
          "start_time": "start_time",
          "end_time": "end_time",
          "duration": "duration",
          "indices": "indices",
          "successful_shards": "successful_shards",
          "failed_shards": "failed_shards",
          "total_shards": "total_shards"
        }
      }
    }
  },
  "update_check": {
    "downloading": "Downloading... {progress}%",
    "heading": "A new version of elasticvue is available.",
    "installing": "Installing update, please wait...",
    "update_info": "Elasticvue {version} is available. Do you want to install it now?",
    "yes": "Yes"
  },
  "welcome": {
    "import_backup": {
      "heading": "Import elasticvue backup"
    },
    "welcome_page": {
      "intro": "The fastest and most user-friendly gui for elasticsearch",
      "first_time": "This seems to be your first time using elasticvue.",
      "add_clusters": "Start by adding your first cluster or by importing a backup of your existing elasticvue configuration."
    }
  }
}